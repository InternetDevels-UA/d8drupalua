- name: "Add percona key"
  action: apt_key url=http://www.percona.com/redir/downloads/RPM-GPG-KEY-percona state=present
  when: ansible_distribution in [ 'Debian', 'Ubuntu' ]

- name: "Add apt percona repo"
  apt_repository: repo='deb http://repo.percona.com/apt {{ ansible_distribution_release }} main' state=present
  when: ansible_distribution in [ 'Debian', 'Ubuntu' ]

- name: "Install Percona MySQL server"
  when: ansible_distribution in [ 'Debian', 'Ubuntu' ]  
  apt:
    pkg: "{{ item }}"
    update_cache: true
  with_items:
    - percona-server-server-5.6
    - percona-server-client-5.6
    - mytop
    - python-mysqldb

- name: "Copy mysql config file."
  template:
    src=templates/my.cnf.j2
    dest=/etc/mysql/my.cnf
    owner=root group=root mode=644

- name: "Ensure mysql is running and starts on boot"
  service: name=mysql state=restarted enabled=true

- name: "Update mysql root password for all root accounts"
  mysql_user: name=root host=localhost password={{ root_db_password }}

- name: "Copy .my.cnf file with root password credentials"
  template: src=templates/root/.my.cnf dest=/root/.my.cnf owner=root mode=0600

- name: "Update mysql root password for all root accounts"
  mysql_user: name=root host={{ item }} password={{ root_db_password }}
  with_items:
    - 127.0.0.1
    - ::1

- name: "Ensure anonymous users are not in the database"
  mysql_user: name='' host={{ item }} state=absent
  with_items:
    - localhost
    - 127.0.0.1

- name: "Remove the test database"
  mysql_db: name=test state=absent