<?php

/**
 * @file
 * idevels_events module file.
 */
use Drupal\Core\Form\FormStateInterface;

/**
 *  Implements hook_form_alter().
 */
function idevels_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'events_node_edit_form' || $form_id == 'events_node_form') {
    $form['title']['widget'][0]['value']['#maxlength'] = 80;
    $form['field_select_price'] = array(
      '#type' => 'select',
      '#title' => t('Cost of event'),
      '#options' => array(
        0 => t('Free event'),
        1 => t('Paid event'),
      ),
      '#default_value' => 1,
      '#weight' => 9.5,
    );
    $field_event_price_values = $form['field_event_price']['widget']['0']['value']['#default_value'];
    if (empty($field_event_price_values)) {
      $form['field_select_price']['#default_value'] = '';
    }
    $form['field_event_price']['#states'] = array(
      'visible' => array(
        ':input[name=field_select_price]' => array('value' => 1)
      ),
    );
    array_unshift($form['actions']['publish']['#submit'], 'idevels_submit_events');
    array_unshift($form['#validate'], 'idevels_validate_events');
    $form['field_city']['widget']['#autocomplete_route_name'] = 'idevels.taxonomy.autocomplete';
    $form['field_city']['widget']['#default_value'] = str_replace('"', '', $form['field_city']['widget']['#default_value']);
    $form['field_event_date']['#attributes']['class'][] = 'future-date';
    $form['field_event_date_end']['#attributes']['class'][] = 'future-date';
    $form['#attached']['js'] = array(drupal_get_path('module', 'idevels') . '/js/idevelsAutocomplete.js', drupal_get_path('module', 'idevels') . '/js/createEventForm.js', drupal_get_path('module', 'idevels') . '/js/DatePastFuture.js');
  }
  if ($form_id == 'user_form' || $form_id == 'user_register_form' || $form_id == 'user_register') {
    array_unshift($form['#validate'], 'idevels_validate_pastdate');
    $form['field_birthday']['#attributes']['class'][] = 'past-date';
    $form['#attached']['js'] = array(drupal_get_path('module', 'idevels') . '/js/DatePastFuture.js');
  }
}

//Custom submit to change field_select_price value
function idevels_submit_events($form, FormStateInterface $form_state) {
  $values = $form_state->getValues();
  if ($values['field_select_price'] == '0') {
    $form_state->setValue('field_event_price', array(''));
  }
}

//Custom validate to change field_city value
function idevels_validate_events($form, FormStateInterface $form_state) {
  $values = $form_state->getValues();
  if (is_array($values['field_city'])) {
    $string = implode(', ', $values['field_city']);
    $form_state->setValue('field_city', array($string));
    $form_state->getUserInput('field_city', array($string));
    $input = $form_state->getUserInput();
    $input['field_city'] = '"' . $input['field_city'] . '"';
    $form_state->setUserInput($input);
  }
  if (strlen(strip_tags($values['body'][0]['value'])) < 302) {
    $form_state->setError($form['body'], t('The event discription is too short. Please enter at least 300 symbols.'));
  }
  if (strlen(strip_tags($values['field_new_teaser'][0]['value'])) < 102) {
    $form_state->setError($form['field_new_teaser'], t('The event teaser is too short. Please enter at least 100 symbols.'));
  }
  if ($values['field_event_date'][0]['value'] < new DateTime()) {
    $form_state->setError($form['field_event_date'], t("The event start time can't be before now."));
  }
  if ($values['field_event_date_end'][0]['value']) {
    if ($values['field_event_date_end'][0]['value'] < $values['field_event_date'][0]['value']) {
      $form_state->setError($form['field_event_date_end'], t("The event end time can't be before event start time."));
    }
    if ($values['field_event_date_end'][0]['value'] < new DateTime()) {
      $form_state->setError($form['field_event_date_end'], t("The event end time can't be before now."));
    }
  }
}

// Custom validate for date
function idevels_validate_pastdate($form, FormStateInterface $form_state) {
  $values = $form_state->getValues();
  if (strtotime($values['field_birthday'][0]['value']->format('Y-m-d\TH:i:s')) > time()) {
    $form_state->setError($form['field_birthday'], t("The date can't be before today"));
  }
}

/**
 * Implements hook_theme().
 */
function idevels_theme() {
  return array(
    'idevels_formatter' => array(
      'variables' => array('lat' => NULL, 'lng' => NULL),
      'template' => 'idevels-formatter',
    ),
  );
}
